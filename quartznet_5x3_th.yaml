name: &name "QuartzNet5x3_1e03_warm1000"

model:
  sample_rate: &sample_rate 16000
  repeat: &repeat 3
  dropout: &dropout 0.0
  separable: &separable true
  labels: &labels ['#','ก','ข','ฃ','ค','ฅ','ฆ','ง','จ','ฉ','ช','ซ','ฌ','ญ','ฎ','ฏ','ฐ','ฑ','ฒ','ณ','ด','ต',
                  'ถ','ท','ธ','น','บ','ป','ผ','ฝ','พ','ฟ','ภ','ม','ย','ร','ล','ว','ศ','ษ','ส','ห','ฬ',
                  'อ','ฮ','ฤ','ฦ','ะ','ั','า','ำ','ิ','ี','ึ','ื','ุ','ู','เ','แ','โ','ใ','ไ','ๅ','ํ','็','่','้','๊','๋']

  train_ds:
    manifest_filepath: "common_voice_th_clean/train_trim.json"
    sample_rate: 16000
    labels: *labels
    batch_size: 32
    trim_silence: True
    max_duration: 16.7
    shuffle: True
    is_tarred: False
    normalize: False
    pin_memory: False
    num_workers: 16
    tarred_audio_filepaths: null
    tarred_shard_strategy: "scatter"

  validation_ds:
    manifest_filepath: "common_voice_th_clean/dev_trim.json"
    sample_rate: 16000
    normalize: False
    labels: *labels
    num_workers: 16
    batch_size: 32
    pin_memory: True
    shuffle: False

  test_ds:
    manifest_filepath: 'common_voice_th_clean/test_trim.json'
    sample_rate: 16000
    # normalize: False
    labels: *labels
    batch_size: 32
    shuffle: False

  preprocessor:
    _target_: nemo.collections.asr.modules.AudioToMelSpectrogramPreprocessor
    normalize: "per_feature"
    window_size: 0.02
    sample_rate: *sample_rate
    window_stride: 0.01
    window: "hann"
    features: &n_mels 64
    n_fft: 512
    frame_splicing: 1
    dither: 0.00001

  spec_augment:
    _target_: nemo.collections.asr.modules.SpectrogramAugmentation
    rect_freq: 50
    rect_masks: 5
    rect_time: 120

  encoder:
    _target_: nemo.collections.asr.modules.ConvASREncoder
    feat_in: *n_mels
    activation: relu
    conv_mask: true

    jasper:
    - dilation: [1]
      dropout: *dropout
      filters: 256
      kernel: [33]
      repeat: 1
      residual: false
      separable: *separable
      stride: [2]

    - dilation: [1]
      dropout: *dropout
      filters: 512
      kernel: [63]
      repeat: *repeat
      residual: true
      separable: *separable
      stride: [1]

    - dilation: [1]
      dropout: *dropout
      filters: 512
      kernel: [63]
      repeat: *repeat
      residual: true
      separable: *separable
      stride: [1]

    - dilation: [1]
      dropout: *dropout
      filters: 512
      kernel: [75]
      repeat: *repeat
      residual: true
      separable: *separable
      stride: [1]

    - dilation: [1]
      dropout: *dropout
      filters: 512
      kernel: [75]
      repeat: *repeat
      residual: true
      separable: *separable
      stride: [1]

    - dilation: [1]
      dropout: *dropout
      filters: 512
      kernel: [75]
      repeat: *repeat
      residual: true
      separable: *separable
      stride: [1]

    - dilation: [2]
      dropout: *dropout
      filters: 512
      kernel: [87]
      repeat: 1
      residual: false
      separable: *separable
      stride: [1]

    - dilation: [1]
      dropout: *dropout
      filters: &enc_filters 1024
      kernel: [1]
      repeat: 1
      residual: false
      stride: [1]

  decoder:
    _target_: nemo.collections.asr.modules.ConvASRDecoder
    feat_in: *enc_filters
    num_classes: 69
    vocabulary: *labels

  optim:
    name: novograd
    # _target_: nemo.core.optim.optimizers.Novograd
    lr: 0.001
    # optimizer arguments
    betas: [0.95, 0.5]
    # betas: [0.9, 0.25]
    weight_decay: 0.001
    # weight_decay: 0.001

    # scheduler setup
    sched:
      name: CosineAnnealing

      # pytorch lightning args
      # monitor: val_loss
      # reduce_on_plateau: false

      # Scheduler params
      warmup_steps: 1000
      warmup_ratio: null
      min_lr: 1e-8
      last_epoch: -1

trainer:
  gpus: 1 # number of gpus
  precision: 16
  amp_backend: "native"
  max_epochs: 100
  max_steps: null # computed at runtime if not set
  num_nodes: 1
  accelerator: ddp
  accumulate_grad_batches: 1
  checkpoint_callback: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager
  log_every_n_steps: 1  # Interval of logging.
  val_check_interval: 1.0  # Set to 0.25 to check 4 times per epoch, or an int for number of iterations

exp_manager:
  # exp_dir: "/work/asr/logs/common_voice_th_quartznet_5x3"
  exp_dir: null
  name: *name
  # explicit_log_dir: "/work/common_voice_th_quartznet/QuartzNet15x5_th_5e04_warm1000_test/2021-05-07_00-14-27"
  # explicit_log_dir: "/work/common_voice_th_quartznet/QuartzNet15x5_th_5e04_test/2021-05-06_14-52-44"
  # explicit_log_dir: "/work/cv_th_quartnet_transfer/QuartzNet15x5_th_1e04_transfer/2021-04-29_02-37-31"
  # explicit_log_dir: '/work/cv_th_quartnet_transfer/QuartzNet15x5_1e04_warm2000_new/2021-04-27_14-06-28'
  # explicit_log_dir: '/work/cv_th_quartnet_transfer/QuartzNet15x5_th_1e04_transfer/2021-04-29_02-37-31'
  # resume_if_exists: True
  create_tensorboard_logger: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: "val_wer"
    mode: "min"
  create_wandb_logger: False
  wandb_logger_kwargs:
    name: null
    project: null

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null
